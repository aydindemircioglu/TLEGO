--- 
algorithm: 
  binary: "yes"
  importantparameter: $\epsilon$
  lossused: hinge
  method: batch
  multiclass: "yes"
  regression: "yes"
compile: 
  makesystem: make
  modifications: 
    - none
data: 
  csv: "yes"
  normalized: "no"
  sparse data: "yes"
execute: 
  binaries: 
    - svm-train
    - svm-predict
  svm-train: 
    call: "svm-train [options] training_set_file [model_file]"
    parameters: 
      usage: "Usage: svm-train [options] training_set_file [model_file]
options:
-s svm_type : set type of SVM (default 0)
        0 -- C-SVC              (multi-class classification)
        1 -- nu-SVC             (multi-class classification)
        2 -- one-class SVM
        3 -- epsilon-SVR        (regression)
        4 -- nu-SVR             (regression)
-t kernel_type : set type of kernel function (default 2)
        0 -- linear: u'*v
        1 -- polynomial: (gamma*u'*v + coef0)^degree
        2 -- radial basis function: exp(-gamma*|u-v|^2)
        3 -- sigmoid: tanh(gamma*u'*v + coef0)
        4 -- precomputed kernel (kernel values in training_set_file)
-d degree : set degree in kernel function (default 3)
-g gamma : set gamma in kernel function (default 1/num_features)
-r coef0 : set coef0 in kernel function (default 0)
-c cost : set the parameter C of C-SVC, epsilon-SVR, and nu-SVR (default 1)
-n nu : set the parameter nu of nu-SVC, one-class SVM, and nu-SVR (default 0.5)
-p epsilon : set the epsilon in loss function of epsilon-SVR (default 0.1)
-m cachesize : set cache memory size in MB (default 100)
-e epsilon : set tolerance of termination criterion (default 0.001)
-h shrinking : whether to use the shrinking heuristics, 0 or 1 (default 1)
-b probability_estimates : whether to train a SVC or SVR model for probability estimates, 0 or 1 (default 0)
-wi weight : set the parameter C of class i to weight*C, for C-SVC (default 1)
-v n: n-fold cross validation mode
-q : quiet mode (no outputs)"
  svm-predict: 
    call: "svm-predict [options] test_file model_file output_file"
    parameters: 
      usage: "Usage: svm-predict [options] test_file model_file output_file
options:
-b probability_estimates: whether to predict probability estimates, 0 or 1 (default 0); for one-class SVM only 0 is supported
-q : quiet mode (no outputs)"
  sample: 
    dataset: heart
    script: 
      commands: 
        - "./svm-train -s 0 -t 2 -g 1.0 -c 1.0 -e 0.001 ./heart_scale /tmp/model.file"
        - "./svm-predict ./heart_scale /tmp/model.file /dev/null"
name: "LIBSVM -- A Library for Support Vector Machines"
papers: 
  texcitations: 
    - CC01a
shortname: "libSVM"
sourcecode: 
  authors: 
    - "Chih-Chung Chang"
    - "Chih-Jen Lin"
  date: "2013"
  dependencies: none
  interfaces: 
    - matlab
    - R
  language: C++
  licence: BSD-like
  package: libSVM
  platform: cross-platform
  retrievaldate: "2013-11-08"
  retrievalurl: "http://www.csie.ntu.edu.tw/~cjlin/libsvm/"
  version: "3.1.7"
